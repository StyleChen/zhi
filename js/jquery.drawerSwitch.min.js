// @description:Drawer switching effects   @author:	movejs
(function() {
    var a = { drawerSwitch: function(c, b) { this.ea = c;
            this.element = $(c);
            this.set = $.extend({}, a.defaluts(), b);
            this._defaults = this.defaults;
            this.shellWarp = "", this.version = "v0.0.1";
            this.author = "movejs";
            this.init() }, defaluts: function() {
            return { pluginName: "drawerSwitch", nextval: "下一张", prevval: "上一张", nextclass: "drawer_sw_btn_r", prevclass: "drawer_sw_btn_l", drawerwidth: 300, drawerheight: 400, navbtn: true, autoplay: false, speed: 2000, item_speed: 30, range: 100, callback: { creater: function() {}, execute: function() {}, complete: function() {} } } } };
    a.drawerSwitch.prototype = { init: function() { this.creater() }, creater: function() {
            var e = ' <a href="javascript:void(0)" class="' + this.set.prevclass + '">' + this.set.prevval + "</a>" + '<a href="javascript:void(0)" class="' + this.set.nextclass + '">' + this.set.nextval + "</a>",
                b, g = this,
                c = $("<div>", { "class": "drawer_sw_con", "style": "width:" + this.set.drawerwidth + "px;height:" + this.set.drawerheight + "px;" }),
                d = c.html(this.element.html()).prepend("<span></span>");
            this.shellWarp = this.element.html(d).append(e);
            if (c.find(">div").length <= 0) { g.element.html("<p>None of the available elements</p>");
                return }
            c.find(">div").addClass("drawer_sw_item");
            g.set.callback.creater(this);
            if (!this.set.navbtn) {
                var f = g.shellWarp.find("a");
                if (f.attr("class") == g.set.nextclass || f.attr("class") == g.set.prevclass) { f.hide() } }
            this.bindEvent();
            if (this.set.autoplay) { b = setInterval(function() { $(g.shellWarp).find("a." + g.set.nextclass).click() }, g.set.speed);
                this.shellWarp.on({ mouseover: function() { clearInterval(b) }, mouseout: function() { b = setInterval(function() { $(g.shellWarp).find("a." + g.set.nextclass).click() }, g.set.speed) } }) } }, bindEvent: function() {
            var h = this,
                e;
            var g = 1;
            var f = $("div.drawer_sw_con"),
                d = f.find("span"),
                c = f.find("div.drawer_sw_item").first().outerWidth(),
                b = f.find("div.drawer_sw_item").length;
            // d.html("第 " + g + " 张/共 " + b + " 张").css({ width: c }).addClass("drawer_sw_tip");
            return this.element.each(function() { $(h.shellWarp).find("a").on("click", function(i) { clearTimeout(e);
                    e = setTimeout(function() {
                        var j = 0;
                        if (i.target.className == h.set.nextclass) {
                            g++;

                            if (g > b) { g = 1 }
                            j--;
                            if (j < 0) { j = b - 1 }
                            h.animate(f, d, j, c, h.set.nextclass);
                            h.setpage(d, g, b)
                            drawerSwitchIndex ++;
                        } else {

                            h.animate(f, d, j, c, h.set.prevclass);
                            g--;
                            if (g < 1) { g = b }
                            j++;
                            if (j > b - 1) { j = 0 }
                            h.setpage(d, g, b)
                            drawerSwitchIndex --;
                        }
                            }, 200) }) }) }, animate: function(g, e, f, b, d) {
            var h = this,
                c = this.set.item_speed;
            if (d == this.set.nextclass) { g.find("div.drawer_sw_item").eq(f).stop(true, true).animate({ "right": -1.2 * b }, c, function() { e.after($(this));
                    $(this).stop(true, true).animate({ "right": 0 }, c) }).end().end().animate({ "left": -h.set.range }, c, function() { $(this).stop(true, false).animate({ left: 0 }, c) }) } else { g.find("div.drawer_sw_item").eq(f).stop(true, true).animate({ "right": -1.2 * b }, c, function() { g.append($(this));
                    $(this).stop(true, true).animate({ "right": 0 }, c) }).end().end().animate({ "left": -h.set.range }, c, function() { $(this).stop(true, false).animate({ left: 0 }, c) }) } }, setpage: function(d, c, b) {
            return d.html() } };
    $.fn[a.defaluts().pluginName] = function(c) {
        var b = a.defaluts().pluginName;
        var d = this;
        this.each(function() {
            if (!$.data(this, "plugin_" + b)) { $.data(this, "plugin_" + b, new a.drawerSwitch(this, c)) } }) }

    var page = false;//判断是否在第二屏，用于幻灯片控制
//        满屏滚动回调
    $('#dowebok').fullpage({
        afterLoad: function(anchorLink, index){
            console.log(index);
            if(index == 2 ){
                $('.pageChose a').css('color','#000');
                page = !page;
                $.fn.fullpage.moveSectionDown()
            }
        },
        onLeave: function(index,nextIndex, direction){
            if(index == 1){
                $.fn.fullpage.setAllowScrolling();
            }
            if(index == '2'){
                $('.pageChose a').css('color','#fff');
                page = !page;
            }

        }
    });

//        幻灯片切换控制
    var drawerSwitchIndex = 1;
    var itemNum;
    window.onmousewheel = function (e) {
        e = e || window.event;
        if (e.wheelDelta < 0 && page) {
            console.log(drawerSwitchIndex)
            console.log(itemNum)
            if (drawerSwitchIndex < itemNum) {
                $(".drawer_sw_btn_r").click();
            }
        } else if (page) {
            console.log(drawerSwitchIndex);
            if (drawerSwitchIndex > 1) {
                $(".drawer_sw_btn_l").click();
            }else{
                $.fn.fullpage.moveSectionUp()
            }
        }else if(e.wheelDelta < 0){
            $.fn.fullpage.moveSectionDown()
        }
    }


    $(".switch").drawerSwitch({
        // pluginName:"drawerSwitch",
        drawerwidth:300,
        drawerheight:400,
        navbtn:false, //是否显示方向按钮
        autoplay:false,//自动播放
        speed:2000, //多久切换一次
        item_speed:400,  //列表元素切换速度
        range:100,   //整体切换幅度 （向左切换）
        callback:{
            creater: function(e) {
                itemNum = $(".drawer_sw_item").length;
            },
            execute: function(e) {
                console.log(e);
            }
        }
    })
})(jQuery);
